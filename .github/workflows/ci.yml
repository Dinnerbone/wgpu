name: CI

on:
  push:
    branches: ["*"]
    tags: [v0.*]
  pull_request:

env:
  RUST_BACKTRACE: 1
  RUST_VERSION: 1.64
  PKG_CONFIG_ALLOW_CROSS: 1 # allow android to work
  RUSTFLAGS: --cfg=web_sys_unstable_apis -D warnings
  RUSTDOCFLAGS: -Dwarnings
  CACHE_SUFFIX: c # cache busting

# We distinguish the following kinds of builds:
# - native: build for the same target as we compile on
# - web: build for the Web
# - em: build for the Emscripten

# For build time and size optimization we disable debug
# entirely on clippy jobs and reduce it to line-numbers
# only for ones where we run tests.
#
# Additionally, we disable incremental builds entirely
# as our caching system doesn't actually cache our crates.
# It adds overhead to the build and another point of failure.

jobs:
  gpu-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - name: Linux x86_64
            os: ubuntu-22.04
            backends: gl

    name: Test ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: llvm-tools-preview

      - name: latest cargo-nextest
        uses: taiki-e/install-action@nextest
      - name: install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: install swiftshader
        if: matrix.os == 'ubuntu-22.04'
        shell: bash
        run: |
          set -e

          mkdir -p swiftshader
          curl -LsSf https://github.com/gfx-rs/ci-build/releases/latest/download/swiftshader-linux-x86_64.tar.xz | tar -xf - -C swiftshader

          echo "LD_LIBRARY_PATH=$PWD/swiftshader" >> $GITHUB_ENV

      - name: install llvmpipe, vulkan sdk
        if: matrix.os == 'ubuntu-22.04'
        shell: bash
        run: |
          set -e

          sudo apt-get update -y -qq

          # vulkan sdk
          wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list https://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list

          sudo apt-get update
          sudo apt install -y libegl1-mesa libgl1-mesa-dri libxcb-xfixes0-dev vulkan-sdk

      - name: disable debug
        shell: bash
        run: |
          mkdir -p .cargo
          echo """
          [profile.dev]
          incremental = false
          debug = 1" >> .cargo/config.toml

      - name: caching
        uses: Swatinem/rust-cache@v2
        with:
          key: test-${{ matrix.os }}-${{ env.CACHE_SUFFIX }}

      - name: run wgpu-info
        shell: bash
        run: |
          set -e

          cargo llvm-cov run --bin wgpu-info --no-report

      - name: run tests
        shell: bash
        run: |
          set -e

          for backend in ${{ matrix.backends }}; do
            echo "======= NATIVE TESTS $backend ======";
            WGPU_BACKEND=$backend cargo llvm-cov nextest -p wgpu -p wgpu-types -p wgpu-hal -p wgpu-core -p player --no-fail-fast --no-report
          done

      - name: generate coverage report
        shell: bash
        run: |
          set -e

          cargo llvm-cov report --lcov --output-path lcov.info

      - name: upload coverage report to codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
